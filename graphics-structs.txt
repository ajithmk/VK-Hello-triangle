 ((:s-type (:graphics-pipeline-create-info)
  :p-next (value)
  :flags (value)
  :stage-count (value)
  :p-stages ((
			(:s-type (:pipeline-shader-stage-create-info)
			:p-next (value)
			:flags (value)
			:stage (value)
			:module (value)
			:p-name (value)
			:p-specialization-info (nil)))
			((:s-type (:pipeline-shader-stage-create-info)
			:p-next (value)
			:flags (value)
			:stage (value)
			:module (value)
			:p-name (value)
			:p-specialization-info (nil))
					 ))
	:p-vertex-input-state ((
							(:s-type (:pipeline-vertex-input-state-create-info)
							:p-next (value)
							:flags (value)
							:vertex-binding-description-count (value)
							:p-vertex-binding-descriptions (((
															:binding (value)
															:stride (value)
															:input-rate (value))
															))
							:vertex-attribute-description-count (value)
							:p-vertex-attribute-descriptions ((
															(:location (value)
															:binding (value)
															:format (value)
															:offset (value))
															))
							)))
	:p-input-assembly-state ((
							(:s-type (:pipeline-input-assembly-state-create-info)
							:p-next (value)
							:flags (value)
							:topology (value)
							:primitive-restart-enable (value))
							))
	:p-tessellation-state ((
							(:s-type (pipeline-tessellation-state-create-info)
							:p-next (value)
							:flags (value)
							:patch-control-points (value))
							))
	:p-viewport-state ((
						(:s-type (:pipeline-viewport-state-create-info)
						:p-next (value)
						:flags (value)
						:viewport-count (value)
						:p-viewports ((
										((:x value)
										(:y value)
										(:width value)
										(:height value)
										(:min-depth value)
										(:max-depth value))
										))
						:scissor-count (value)
						:p-scissors ((
										(:offset ((
													:x (value)
													:y (value)
													))
										:extent ((
													:width (value)
													:height (value)
													)))
									))
						)))
	:p-rasterization-state ((
							(:s-type (pipeline-rasterization-state-create-info)
							:p-next (value)
							:flags (value)
							:depth-clamp-enable (value)
							:rasterizer-discard-enable (value)
							:polygon-mode (value)
							:cull-mode (value)
							:front-face (value)
							:depth-bias-enable (value)
							:depth-bias-constant-factor (value)
							:depth-bias-clamp (value)
							:depth-bias-slope-factor (value)
							:line-width (value)
							)))
	:p-multisample-state  ((
							(:s-type (:pipeline-multisample-state-create-info)
							:p-next (value)
							:flags (value)
							:rasterization-samples (value)
							:sample-shading-enable (value)
							:min-sample-shading (value)
							:p-sample-mask (value)
							:alpha-to-coverage-enable (value)
							:alpha-to-one-enable (value)
							)))
	:p-depth-stencil-state ((
							(:s-type (:pipeline-depth-stencil-state-create-info)
							:p-next (value )
							:flags (value)
							:depth-test-enable (value)
							:depth-write-enable (value)
							:depth-compare-op (value)
							:depth-bounds-test-enable (value)
							:stencil-test-enable (value)
							:front ((
									:fail-op (value)
									:pass-op (value)
									:depth-fail-op (value)
									:compare-op (value)
									:compare-mask (value)
									:write-mask (value)
									:reference (value)
									))
							:back ((
									:fail-op (value)
									:pass-op (value)
									:depth-fail-op (value)
									:compare-op (value)
									:compare-mask (value)
									:write-mask (value)
									:reference (value)
									))
							:min-depth-bounds (value)
							:max-depth-bounds (value)
							)))
	:p-color-blend-state ((
						(:s-type (:pipeline-color-blend-state-create-info)
						:p-next (value)
						:flags (value)
						:logic-op-enable (value)
						:logic-op (value)
						:attachment-count (value)
						:p-attachments ((
										(:blend-enable (value)
										:src-color-blend-factor (value)
										:dst-color-blend-factor (value)
										:color-blend-op (value)
										:src-alpha-blend-factor (value)
										:dst-alpha-blend-factor (value)
										:alpha-blend-op (value)
										:color-write-mask (value)
										)))
						:blend-constants (value nil nil 4)
							)))
	:p-dynamic-state ((
						(:s-type (:pipeline-dynamic-state-create-info)
						:p-next (value)
						:flags (value)
						:dynamic-state-count (value)
						:p-dynamic-states (value)
						)))
	:layout (value)
	:render-pass (value)
	:subpass (value)
	:base-pipeline-handle (value)
	:base-pipeline-index (value))